[#ftl]
[#-- @ftlvariable name="sample_resource" type="org.codehaus.enunciate.contract.common.rest.RESTResource" --]
<h1>
  Introduction
</h1>

<p>
  The Java client-side library is used to provide the set of Java objects that can be serialized
  to/from JSON using <a href="http://jackson.codehaus.org/">Jackson</a>.  This is useful for accessing the
  JSON REST endpoints that are published by this application.
</p>

[#if sample_resource??]
[#if sample_resource.outputPayload?? && sample_resource.outputPayload.xmlElement??]
<h1>
  REST Example (Raw Jackson)
</h1>

<code>
java.net.URL url = new java.net.URL(baseURL + "${sample_resource.path}");
ObjectMapper mapper = new ObjectMapper();
java.net.URLConnection connection = url.openConnection();
[#if sample_resource.inputPayload?? && sample_resource.inputPayload.xmlElement??]
connection.setDoOutput(true);
[/#if]
connection.connect();

[#if sample_resource.inputPayload?? && sample_resource.inputPayload.xmlElement??]
mapper.writeValue(connection.getOutputStream(), ${sample_resource.inputPayload.xmlElement.simpleName?uncap_first});
[/#if]
${sample_resource.outputPayload.xmlElement.simpleName} result = (${sample_resource.outputPayload.xmlElement.simpleName}) mapper.readValue( connection.getInputStream(), ${sample_resource.outputPayload.xmlElement.simpleName}.class );
//handle the result as needed...
</code>

[/#if]
[/#if]