[#ftl]
[#import "jaxb-metadata.fmt" as libJaxbMetadata/]
[#--template for the client-side complex type.--]
[@file name=(type.simpleName + ".java")  package=packageFor(type) charset="utf-8"]
// Generated by Enunciate
package ${packageFor(type)};

/**
 * ${type.docComment?default("(no documentation provided)")?chop_linebreak?replace("\n", "\n * ")}
 */
[@libJaxbMetadata.writeTypeMetadata typeDef=type /]
[#if rootEl?exists]
@javax.xml.bind.annotation.XmlRootElement (
  name = "${rootEl.name}",
  namespace = "${rootEl.namespace?default("")}"
)
[/#if]
public [#if type.abstract]abstract [/#if][#if type.final]final [/#if]class ${simpleNameFor(type)} [#if !type.baseObject]extends ${classnameFor(type.superclass, true)} [#else]implements java.io.Serializable [/#if]{

  [#list type.attributes as attribute]
  private ${classnameFor(attribute)} _${attribute.simpleName};
  [/#list]
  [#if type.value?exists]
  private ${classnameFor(type.value)} _${type.value.simpleName};
  [#else]
    [#list type.elements as element]
  private ${classnameFor(element)} _${element.simpleName};
    [/#list]
  [/#if]
  [#if type.anyElement?exists]
  private java.util.List<Object> _${type.anyElement.simpleName};
  [/#if]
  [#if type.hasAnyAttribute]
  private java.util.Map<javax.xml.namespace.QName, String> otherAttributes;
  [/#if]
  [#list type.attributes as attribute]

  /**
   * ${(attribute.javaDoc.return!attribute.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  [@libJaxbMetadata.writeAccessorMetadata accessor=attribute /]
  public ${classnameFor(attribute)} get${attribute.simpleName?cap_first}() {
    return this._${attribute.simpleName};
  }

  /**
   * ${(attribute.javaDoc.return!attribute.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public void set${attribute.simpleName?cap_first}(${classnameFor(attribute)} _${attribute.simpleName}) {
    this._${attribute.simpleName} = _${attribute.simpleName};
  }
    [#if attribute.referencesQNameEnum!false]

  /**
   * Convenience accessor for the known value of a ${attribute.simpleName} property.
   *
   * @see ${classnameFor(attribute.QNameEnumRef)}#convertFromKnownQName
   */
  @javax.xml.bind.annotation.XmlTransient
  public ${classnameFor(attribute.QNameEnumRef)} getKnown${attribute.simpleName?cap_first}() {
    return ${classnameFor(attribute.QNameEnumRef)}.convertFromKnownQName(get${attribute.simpleName?cap_first}());
  }

  /**
   * Convenience accessor for the known value of a ${attribute.simpleName} property.
   *
   * @see ${classnameFor(attribute.QNameEnumRef)}#convertToKnownQName
   */
  public void setKnown${attribute.simpleName?cap_first}(${classnameFor(attribute.QNameEnumRef)} _${attribute.simpleName}) {
    set${attribute.simpleName?cap_first}(${classnameFor(attribute.QNameEnumRef)}.convertToKnownQName(_${attribute.simpleName}));
  }
    [/#if]
  [/#list]
  [#if type.value?exists]

  /**
   * ${(type.value.javaDoc.return!type.value.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  [@libJaxbMetadata.writeAccessorMetadata accessor=type.value /]
  public ${classnameFor(type.value)} get${type.value.simpleName?cap_first}() {
    return this._${type.value.simpleName};
  }

  /**
   * ${(type.value.javaDoc.return!type.value.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public void set${type.value.simpleName?cap_first}(${classnameFor(type.value)} _${type.value.simpleName}) {
    this._${type.value.simpleName} = _${type.value.simpleName};
  }
    [#if type.value.referencesQNameEnum!false]

  /**
   * Convenience accessor for the known value of a ${type.value.simpleName} property.
   *
   * @see ${classnameFor(type.value.QNameEnumRef)}#convertFromKnownQName
   */
  @javax.xml.bind.annotation.XmlTransient
  public ${classnameFor(type.value.QNameEnumRef)} getKnown${type.value.simpleName?cap_first}() {
    return ${classnameFor(type.value.QNameEnumRef)}.convertFromKnownQName(get${type.value.simpleName?cap_first}());
  }

  /**
   * Convenience accessor for the known value of a ${type.value.simpleName} property.
   *
   * @see ${classnameFor(type.value.QNameEnumRef)}#convertToKnownQName
   */
  public void setKnown${type.value.simpleName?cap_first}(${classnameFor(type.value.QNameEnumRef)} _${type.value.simpleName}) {
    set${type.value.simpleName?cap_first}(${classnameFor(type.value.QNameEnumRef)}.convertToKnownQName(_${type.value.simpleName}));
  }
    [/#if]
  [#else]
    [#list type.elements as element]

  /**
   * ${(element.javaDoc.return!element.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  [@libJaxbMetadata.writeAccessorMetadata accessor=element /]
  public ${classnameFor(element)} get${element.simpleName?cap_first}() {
    return this._${element.simpleName};
  }

  /**
   * ${(element.javaDoc.return!element.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public void set${element.simpleName?cap_first}(${classnameFor(element)} _${element.simpleName}) {
    this._${element.simpleName} = _${element.simpleName};
  }
      [#if element.referencesQNameEnum!false]

  /**
   * Convenience accessor for the known value of a ${element.simpleName} property.
   *
   * @see ${classnameFor(element.QNameEnumRef)}#convertFromKnownQName
   */
  @javax.xml.bind.annotation.XmlTransient
  public ${classnameFor(element.QNameEnumRef)} getKnown${element.simpleName?cap_first}() {
    return ${classnameFor(element.QNameEnumRef)}.convertFromKnownQName(get${element.simpleName?cap_first}());
  }

  /**
   * Convenience accessor for the known value of a ${element.simpleName} property.
   *
   * @see ${classnameFor(element.QNameEnumRef)}#convertToKnownQName
   */
  public void setKnown${element.simpleName?cap_first}(${classnameFor(element.QNameEnumRef)} _${element.simpleName}) {
    set${element.simpleName?cap_first}(${classnameFor(element.QNameEnumRef)}.convertToKnownQName(_${element.simpleName}));
  }
      [/#if]
    [/#list]
  [/#if]
  [#if type.anyElement?exists]

  /**
   * ${(type.anyElement.javaDoc.return!type.anyElement.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  @javax.xml.bind.annotation.XmlAnyElement[#if type.anyElement.lax?exists && type.anyElement.lax]( lax = true )[/#if]
  public java.util.List<Object> get${type.anyElement.simpleName?cap_first}() {
    return this._${type.anyElement.simpleName};
  }

  /**
   * ${(type.anyElement.javaDoc.return!type.anyElement.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public void set${type.anyElement.simpleName?cap_first}(java.util.List<Object> _${type.anyElement.simpleName}) {
    this._${type.anyElement.simpleName} = _${type.anyElement.simpleName};
  }
  [/#if]
  [#if type.hasAnyAttribute]

  /**
   * The other attributes.
   *
   * @return The other attributes.
   */
  @javax.xml.bind.annotation.XmlAnyAttribute
  public java.util.Map<javax.xml.namespace.QName, String> getOtherAttributes() {
    return this.otherAttributes;
  }

  /**
   * The other attributes.
   *
   * @param otherAttributes The other attributes.
   */
  public void setOtherAttributes(java.util.Map<javax.xml.namespace.QName, String> otherAttributes) {
    this.otherAttributes = otherAttributes;
  }
  [/#if]

}
[/@file]