[#ftl]
[#--template for the client-side complex type.--]
[#macro writeEnumType type]
  [#list moduleFor(type)?split("::") as submodule]

module ${submodule}
  [/#list]

  # ${type.javaDoc?default("(no documentation provided)")?chop_linebreak?html?replace("\n", "\n  # ")}
  class ${simpleNameFor(type)}
  [#assign enumValueMap=type.enumValues/]
  [#list type.enumConstants as constant]
    [#if constant.annotations["org.codehaus.enunciate.ClientName"]?exists][#assign enumValue = constant.annotations["org.codehaus.enunciate.ClientName"].allElementValues["value"] /][#else][#assign enumValue = constant.simpleName /][/#if]

    # ${constant.docComment?default("(no documentation provided)")?chop_linebreak?html?replace("\n", "\n    # ")}
    ${enumValue?cap_first} = "${enumValue}"
  [/#list]
  end
  [#list moduleFor(type)?split("::") as submodule]

end
  [/#list]
[/#macro]