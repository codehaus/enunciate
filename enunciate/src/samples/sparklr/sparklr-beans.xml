<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

  <!--
    The sparklr users.
  -->
  <bean id="userDetailsService" class="org.acegisecurity.userdetails.memory.InMemoryDaoImpl">
     <property name="userMap">
       <value>
         marissa=koala,ROLE_USER
         paul=emu,ROLE_USER
       </value>
     </property>
   </bean>

  <!--
    Definition of a consumer details service for sparklr.  For now, we only have one registered consumer, tonr,
    whose consumer key is "tonr-consumer-key" and whose shared secret is "SHHHHH!!!!!!!!!!".  (There is also some
    other information about the consumer included.)
  -->
  <bean id="consumerDetailsService" class="org.springframework.security.oauth.provider.InMemoryConsumerDetailsService">
    <property name="consumerDetailsStore">
      <map>
        <entry key="tonr-consumer-key">
          <bean class="org.springframework.security.oauth.examples.sparklr.oauth.SparklrConsumerDetails">
            <property name="consumerKey" value="tonr-consumer-key"/>
            <property name="displayName" value="Tonr.com"/>
            <property name="resourceName" value="Your Photos"/>
            <property name="resourceDescription" value="Your photos that you have uploaded to sparklr.com."/>
            <property name="signatureSecret">
              <bean class="org.springframework.security.oauth.common.signature.SharedConsumerSecret">
                <constructor-arg value="SHHHHH!!!!!!!!!!"/>
              </bean>
            </property>
          </bean>
        </entry>
      </map>
    </property>
  </bean>
  
  <!--
    This is the definition for the token services that service the sparklr OAuth engine.  Since sparklr only
    runs on a single app server, we can use an in-memory implementation of the token services.  If the
    app were distributed among multiple app servers, you'd have to provide token services that make the tokens
    visible to all app servers.

    The in-memory token services spawn a separate thread that cleans up expired tokens.
  -->
  <bean id="tokenServices" class="org.springframework.security.oauth.provider.token.InMemoryProviderTokenServices"/>

  <bean id="photoServices" class="org.springframework.security.oauth.examples.sparklr.impl.PhotoServiceImpl">
    <property name="photos">
      <list>
        <bean class="org.springframework.security.oauth.examples.sparklr.PhotoInfo">
          <property name="id" value="1"/>
          <property name="name" value="photo1.jpg"/>
          <property name="userId" value="marissa"/>
          <property name="resourceURL" value="/org/springframework/security/oauth/examples/sparklr/impl/resources/photo1.jpg"/>
        </bean>
        <bean class="org.springframework.security.oauth.examples.sparklr.PhotoInfo">
          <property name="id" value="2"/>
          <property name="name" value="photo2.jpg"/>
          <property name="userId" value="paul"/>
          <property name="resourceURL" value="/org/springframework/security/oauth/examples/sparklr/impl/resources/photo2.jpg"/>
        </bean>
        <bean class="org.springframework.security.oauth.examples.sparklr.PhotoInfo">
          <property name="id" value="3"/>
          <property name="name" value="photo3.jpg"/>
          <property name="userId" value="marissa"/>
          <property name="resourceURL" value="/org/springframework/security/oauth/examples/sparklr/impl/resources/photo3.jpg"/>
        </bean>
        <bean class="org.springframework.security.oauth.examples.sparklr.PhotoInfo">
          <property name="id" value="4"/>
          <property name="name" value="photo4.jpg"/>
          <property name="userId" value="paul"/>
          <property name="resourceURL" value="/org/springframework/security/oauth/examples/sparklr/impl/resources/photo4.jpg"/>
        </bean>
        <bean class="org.springframework.security.oauth.examples.sparklr.PhotoInfo">
          <property name="id" value="5"/>
          <property name="name" value="photo5.jpg"/>
          <property name="userId" value="marissa"/>
          <property name="resourceURL" value="/org/springframework/security/oauth/examples/sparklr/impl/resources/photo5.jpg"/>
        </bean>
        <bean class="org.springframework.security.oauth.examples.sparklr.PhotoInfo">
          <property name="id" value="6"/>
          <property name="name" value="photo6.jpg"/>
          <property name="userId" value="paul"/>
          <property name="resourceURL" value="/org/springframework/security/oauth/examples/sparklr/impl/resources/photo6.jpg"/>
        </bean>
      </list>
    </property>
  </bean>

</beans>