  -Code-first vs. WSDL-first
    -pros and cons of each
    -summary: hwo to bridge the disconnect between contract and implementation
  -What is a "contract"?
    -Technical description, specification.  Interpretable by computer. WSDL/Schema.
    -ALSO a recognition of "cost", and consideration for what's possible within "budget".
    -ALSO human-readable documentation, usage scenarios, example code, etc.
    -ALSO specifics on how to handle ambiguities and potential imcompatabilities.
      -Could be specified in computer-interpretable form (e.g. nilable)
      -Sometimes it CANNOT be so expressed and must be resolved through implementation and usage.
  -Contract conflict
    -metaphor for contract for finishing the basement.
      -wouldn't want to do it without a contract.
      -cannot rely on a handshake and word-of-mouth.
      -must be agreed and signed by BOTH parties.
    -Vendors must be smitten
      -can't just throw code together and call it a contract.
      -missing ambiguity resolution.
      -often missing human-readable contract.
    -(Specification bigots)? must ALSO be smitten.
      -They ignore the other side of the contract (or both sides, for that matter).
      -no consideration for the "cost" to implement, maintain, and update.
    -Introducing the "compiled contract."
      -compilers of today