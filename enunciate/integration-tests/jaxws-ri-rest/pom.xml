<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.codehaus.enunciate</groupId>
  <artifactId>enunciate-integration-jaxws-ri-rest</artifactId>
  <version>1.16-RC2</version>
  <name>Enunciate - JAXWS-RI/REST Integration Tests</name>
  <description>Integration tests for Enunciate, testing the JAXWS-RI + REST combo.</description>
  <packaging>war</packaging>

  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${basedir}/src/main/samples/full</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <!--now we need to add the generated sources we're testing to the test classpath-->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/samples/full</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>require.gmcs.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gmcs.executable</property>
                  <message>In order to run the jaxws-ri integration tests, you must have Mono installed.
First install Mono for your platform. (See http://mono-project.com/Start and note there's a Windows version of Mono, too.)
Then, define a profile in your settings.xml file that defines the path to your 'gmcs' executable in the property 'gmcs.executable'.
If you just want to run the Java tests without running the C# tests, set the value of the property 'gmcs.executable' to be 'true'.</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>require.gcc.or.skip</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>gcc.executable</property>
                  <message>In order to run the jaxws-ri integration testse, you must have gcc installed along with libxml and gnustep.
Define a profile in your settings.xml file that defines the path to your 'gcc'
executable in the property 'gcc.executable'. Also set a property named 'libxml.config.executable' that
specifies the executable that exposes your libxml compiler flags and library includes.
Also set a property named 'gnustep.config.executable' that specifies the executable that exposes your gnustep compiler flags and library includes.
If you just want to skip the Objective C tests, set the value of the property 'gcc.executable' to be 'true'.
(And don't ask any questions about why that works. Maven mess.)</message>
                </requireProperty>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.enunciate</groupId>
        <artifactId>maven-enunciate-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>assemble</goal>
            </goals>
            <configuration>
              <addXFireClientSourcesToTestClasspath>true</addXFireClientSourcesToTestClasspath>
              <addJAXWSClientSourcesToTestClasspath>true</addJAXWSClientSourcesToTestClasspath>
              <exports>
                <csharp.assembly>${project.build.directory}/cstests/full.dll</csharp.assembly>
              </exports>
              <springEnabled>true</springEnabled>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-amf</artifactId>
            <version>${project.version}</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>enunciate-xfire-client</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <id>compile-cs</id>
            <phase>test-compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!--compile the nunit tests-->
              <executable>${gmcs.executable}</executable>
              <skip>${gmcs.executable}</skip>
              <arguments>
                <argument>${project.build.testSourceDirectory}/../cs/TestCSharpClient.cs</argument>
                <argument>/out:${project.build.directory}/cstests/fulltests.exe</argument>
                <argument>/target:exe</argument>
                <argument>/r:System.Web.Services</argument>
                <argument>/r:${project.build.directory}/cstests/full.dll</argument>
              </arguments>
              <workingDirectory>${project.build.directory}</workingDirectory>
            </configuration>
          </execution>
          <execution>
            <id>nunit</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!--compile the nunit tests-->
              <executable>mono</executable>
              <skip>${gmcs.executable}</skip>
              <arguments>
                <argument>${project.build.directory}/cstests/fulltests.exe</argument>
              </arguments>
              <workingDirectory>${project.build.directory}</workingDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <!--as part of the tests, we're going to make sure the c and obj-c code compiles.-->
            <id>compile-obj-c</id>
            <phase>test-compile</phase>
            <configuration>
              <tasks>
                <property name="gcc.executable" value="${gcc.executable}"/>
                <property name="libxml.config.executable" value="${libxml.config.executable}"/>
                <property name="gnustep.config.executable" value="${gnustep.config.executable}"/>
                <property name="project.build.directory" value="${project.build.directory}"/>

                <ant antfile="${basedir}/gcc-compile.xml">
                  <target name="gcc"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- skip unit test run, tests to be executed during integration-test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>${skipTests}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.0-beta-2</version>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <container>
            <containerId>tomcat5x</containerId>
            <zipUrlInstaller>
              <url>http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.26/bin/apache-tomcat-5.5.26.zip</url>
              <installDir>${basedir}/cargo-installs</installDir>
            </zipUrlInstaller>
            <append>false</append>
          </container>
          <configuration>
            <properties>
               <!--<cargo.jvmargs>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</cargo.jvmargs>-->
            </properties>
            <home>${project.build.directory}/tomcat5x</home>
            <deployables>
              <deployable>
                <properties>
                  <context>full</context>
                </properties>
              </deployable>
            </deployables>
          </configuration>
        </configuration>
      </plugin>
      <plugin>
        <!--skip deploy (this is just a test module)-->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-amf-rt</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>

      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.1</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-xfire-client-rt</artifactId>
      <version>${project.version}</version>

      <!--used to compile the tests.-->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <version>1.6.2</version>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>

      <scope>test</scope>
    </dependency>
  </dependencies>

  <distributionManagement>

    <repository>
      <id>codehaus.org</id>
      <name>Enunciate Central Repository</name>
      <url>dav:https://dav.codehaus.org/repository/enunciate/</url>
    </repository>

    <snapshotRepository>
      <id>codehaus.org</id>
      <name>Enunciate Central Development Repository</name>
      <url>dav:https://dav.codehaus.org/snapshots.repository/enunciate/</url>
    </snapshotRepository>

  </distributionManagement>

</project>
