[#ftl]
[#--template for the client-side web fault.--]
[@file name=(fault.simpleName + ".java")  package=("xfireclient.jdk14." + packageFor(fault))]
// Generated by Enunciate
package ${packageFor(fault)};

/**
 * ${fault.docComment?default("(no documentation provided)")?chop_linebreak?replace("\n", "\n * ")}
 */
 [#--todo:--]
 [#stop "this client fault bean isn't correct, nor will it be deserialized correctly.  fix it."/]
public class ${fault.simpleName} extends Exception {
  [#if !fault.implicitSchemaElement]
    [#assign faultBean=fault.explicitFaultBean/]

  private ${classnameFor(faultBean)} faultInfo;

  public ${fault.simpleName}(${classnameFor(faultBean)} faultInfo) {
    this.faultInfo = faultInfo;
  }

  public ${classnameFor(faultBean)} getFaultInfo() {
    return this.faultInfo;
  }

  [#else]
    [#list fault.childElements as childElement]
      [#assign element=childElement.property/]

  private ${classnameFor(element.propertyType)} ${element.simpleName};

  /**
   * ${element.javaDoc.return?default(element.javaDoc)?chop_linebreak?replace("\n", "\n   * ")}
   */
  public ${classnameFor(element.propertyType)} get${element.simpleName?cap_first}() {
    return this.${element.simpleName};
  }

  /**
   * ${element.javaDoc.return?default(element.javaDoc)?chop_linebreak?replace("\n", "\n   * ")}
   */
  public void set${element.simpleName?cap_first}(${classnameFor(element.propertyType)} ${element.simpleName}) {
    this.${element.simpleName} = ${element.simpleName};
  }
    [/#list]
  [/#if]

}
[/@file]