[#ftl]
[#--template for the client-side enum type.--]
[@file name=(type.simpleName + ".java")  package=packageFor(type)]
// Generated by Enunciate
package ${packageFor(type)} {

  import flash.utils.IExternalizable;
  import flash.utils.IDataOutput;
  import flash.utils.IDataInput;

  /**
   * ${type.docComment?default("(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  [Bindable]
  [RemoteClass(alias="${type.qualfiedName}")]
  public final class ${type.simpleName} {
    [#assign enumValueMap=type.enumValues/]
    [#list type.delegate.enumConstants as constant]

    /**
     * ${constant.docComment?default("(no documentation provided)")?chop_linebreak?replace("\n", "\n     * ")}
     */
    public static var ${constant.simpleName}:${type.simpleName} = new ${type.simpleName}("${enumValueMap[constant.simpleName]}");
    [/#list]

    private var _value:String;

    public function ${type.simpleName}(value:String = null) {
      _value = value;
    }

    public final function get value():String {
      return _value;
    }

    public final function set value(value:String):void {
      _value = value;
    }

    public final function writeExternal(output:IDataOutput):void {
      output.writeObject(_value);
    }

    public final function readExternal(input:IDataInput):void {
      _value=input.readObject() as String;
    }

    public function toString():String {
      return _value;
    }

    public function equalsTo(obj:Object):Boolean {
      return (obj is ${type.simpleName} && (obj as ${type.simpleName}).value==_value);
    }
  }
}
[/@file]