[#ftl]
[#--template for the client-side endpoint interface.--]
[@file name=(endpointInterface.simpleName + ".as")  package=endpointInterface.package.qualifiedName]
// Generated by Enunciate
package ${endpointInterface.package.qualifiedName} {

  /**
   * ${endpointInterface.docComment?default("(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public class ${endpointInterface.simpleName} extends flash.events.EventDispatcher {

    [@forEachWebMethod endpointInterface=endpointInterface]
      [#if !webMethod.annotations["org.codehaus.enunciate.modules.amf.AMFTransient"]?exists]

    /**
     * ${webMethod.docComment?default("(no documentation provided)")?chop_linebreak?replace("\n", "\n     * ")}
     */
    public ${classnameFor(webMethod.webResult)} ${webMethod.simpleName}([#list webMethod.webParameters as param]${classnameFor(param)} ${param.simpleName}[#if param_has_next], [/#if][/#list]) [#if webMethod.webFaults?size > 0]throws [#list webMethod.webFaults as fault]${classnameFor(fault)}[#if fault_has_next], [/#if][/#list][/#if] {
      try {
        [#if !webMethod.returnType.void]
          [#if !webMethod.returnType.primitive]
          return (${classnameFor(webMethod.webResult)}) invokeOperation("${webMethod.operationName}"[#list webMethod.webParameters as param], [#if param.type.array](Object) [/#if]${param.simpleName}[/#list]);
          [#else]
          return [@unwrapIfPrimitive type=webMethod.returnType](([@primitiveWrapper type=webMethod.returnType/]) invokeOperation("${webMethod.operationName}"[#list webMethod.webParameters as param], [#if param.type.array](Object) [/#if]${param.simpleName}[/#list]))[/@unwrapIfPrimitive];
          [/#if]
        [#else]
          invokeOperation("${webMethod.operationName}"[#list webMethod.webParameters as param], [#if param.type.array](Object) [/#if]${param.simpleName}[/#list]);
        [/#if]
      }
        [#list webMethod.webFaults as fault]
      catch (${classnameFor(fault)} e) {
        throw e;
      }
        [/#list]
      catch (Exception e) {
        if (e instanceof RuntimeException) {
          throw (RuntimeException) e;
        }
        else {
          throw new RuntimeException(e);
        }
      }
    }
      [/#if]
    [/@forEachWebMethod]
  }
}
[/@file]
[@forEachWebMethod endpointInterface=endpointInterface]
  [#if !webMethod.annotations["org.codehaus.enunciate.modules.amf.AMFTransient"]?exists]
    [@file name="${webMethod.operationName?cap_first}ResultEvent.as"  package=endpointInterface.qualifiedName]
// Generated by Enunciate
package ${endpointInterface.qualifiedName} {

  /**
   * Event triggered when a response is recieved.
   */
  public class ${webMethod.operationName?cap_first}ResultEvent extends flash.events.Event {

      [#if !webMethod.returnType.void]
    private var _result:${classnameFor(webMethod.webResult)};

      [/#if]
    /**
     * Construct a result event.
     */
    public function ${webMethod.operationName?cap_first}ResultEvent([#if !webMethod.returnType.void]result:${classnameFor(webMethod.webResult)}[/#if]) {
      super("${webMethod.operationName}");
      [#if !webMethod.returnType.void]
      this._result = result;
      [/#if]
    }

      [#if !webMethod.returnType.void]
    /**
     * The result.
     */
    public function get result():${classnameFor(webMethod.webResult)} {
      return _result;
    }

      [/#if]
    public override function clone():flash.events.Event {
      return new ${webMethod.operationName?cap_first}ResultEvent([#if !webMethod.returnType.void]this._result[/#if]);
    }
  }
}
    [/@file]
  [/#if]
[/@forEachWebMethod]
