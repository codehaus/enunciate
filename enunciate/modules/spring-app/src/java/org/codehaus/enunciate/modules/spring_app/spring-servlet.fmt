[#ftl]
[@file name="spring-servlet.xml"]
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans[#if defaultDependencyCheck?exists] default-dependency-check="${defaultDependencyCheck}"[/#if][#if defaultAutowire?exists] default-autowire="${defaultAutowire}"[/#if]>

  <!-- the soap service factory -->
  <bean id="soapServiceFactory" class="org.codehaus.enunciate.modules.xfire.EnunciatedJAXWSServiceFactory"/>

  <!-- the parent for all soap service endpoints -->
  <bean id="soap-endpoint" abstract="true" class="org.codehaus.enunciate.modules.xfire.EnunciatedXFireExporter">
    <property name="serviceFactory" ref="soapServiceFactory"/>
    <property name="xfire" ref="xfire"/>
    <property name="enunciateServiceFactory" ref="enunciateServiceFactory"/>
  </bean>

  <!-- the namespace-to-prefix map. -->
  <bean id="namespaces2prefix" class="java.util.HashMap">
    <constructor-arg>
      <map>
  [#list ns2prefix?keys as ns]
    [#if ns?exists]
        <entry key="${ns}" value="${ns2prefix[ns]}"/>
    [/#if]
  [/#list]
      </map>
    </constructor-arg>
  </bean>

  <!-- the parent for all REST service endpoints -->
  <bean id="rest-endpoint" abstract="true">
    <property name="namespaces2Prefixes" ref="namespaces2prefix"/>
  [#if securityEnabled]
    <property name="exceptionHandler">
      <bean class="org.codehaus.enunciate.modules.spring_app.SecurityAwareExceptionHandler">
        <constructor-arg>
          <bean class="org.codehaus.enunciate.modules.rest.RESTExceptionHandler"/>
        </constructor-arg>
      </bean>
    </property>
  [/#if]
  </bean>

  <!-- the REST resource factory-->
  <bean id="restResourceFactory" class="org.codehaus.enunciate.modules.rest.RESTResourceFactory">
    <property name="enunciateServiceFactory" ref="enunciateServiceFactory"/>
    <property name="endpointClasses">
      <list>
        <!-- List the REST endpoint bean classes -->
  [@forEachRESTEndpoint]
    [#if endpoint.class]
        <value>${endpoint.qualifiedName}</value>
    [/#if]
  [/@forEachRESTEndpoint]
      </list>
    </property>
  </bean>

  <!-- the handler mapping for the spring servlet. -->
  <bean id="handlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    <property name="alwaysUseFullPath" value="true"/>

    <property name="interceptors">
      <list>
        <bean class="org.codehaus.enunciate.modules.spring_app.HTTPRequestContextInterceptor"/>
  [#if handlerInterceptors?exists]
    [#list handlerInterceptors as interceptor]
      [#if interceptor.interceptorClass?exists]
        <bean class="${interceptor.interceptorClass}"/>
      [#else]
        <ref bean="${interceptor.beanName}"/>
      [/#if]
    [/#list]
  [/#if]
      </list>
    </property>

    <property name="urlMap">
      <map>
  [@forEachWsdl]
    [@forEachEndpointInterface wsdl=wsdl]
      [#list endpointInterface.endpointImplementations as impl]
        [#if impl.bindingType.soap11 || impl.bindingType.soap12]

        <!-- mapping for the SOAP endpoint for ${endpointInterface.serviceName} -->
        [#--todo: what about eis with the same name, different namespace?--]
        <entry key="${soapAddressPath(endpointInterface)}">
          <bean parent="soap-endpoint">
            <property name="serviceClass" value="${impl.qualifiedName}"/>
          [#if wsdl.properties.filename?exists]
            <property name="wsdlView">
              <bean class="org.springframework.web.servlet.view.RedirectView">
                <property name="url" value="/${docsDir}${wsdl.properties.filename}"/>
                <property name="contextRelative" value="true"/>
              </bean>
            </property>
          [/#if]
          </bean>
        </entry>
        [/#if]
      [/#list]
    [/@forEachEndpointInterface]
  [/@forEachWsdl]

  [@forEachRESTNoun]
        <entry key="${restSubcontext}${noun.antPattern}">
          <bean parent="rest-endpoint" class="org.codehaus.enunciate.modules.rest.RESTResourceXMLExporter">
            <constructor-arg>
              <bean factory-bean="restResourceFactory" factory-method="getRESTResource">
                <constructor-arg value="${noun.name}"/>
                <constructor-arg value="${noun.context}"/>
              </bean>
            </constructor-arg>
          </bean>
        </entry>

        <entry key="${restSubcontext}${noun.antPattern}/**">
          <bean parent="rest-endpoint" class="org.codehaus.enunciate.modules.rest.RESTResourceXMLExporter">
            <constructor-arg>
              <bean factory-bean="restResourceFactory" factory-method="getRESTResource">
                <constructor-arg value="${noun.name}"/>
                <constructor-arg value="${noun.context}"/>
              </bean>
            </constructor-arg>
          </bean>
        </entry>

        <entry key="${jsonSubcontext}${noun.antPattern}">
          <bean parent="rest-endpoint" class="org.codehaus.enunciate.modules.rest.RESTResourceJSONExporter">
            <constructor-arg>
              <bean factory-bean="restResourceFactory" factory-method="getRESTResource">
                <constructor-arg value="${noun.name}"/>
                <constructor-arg value="${noun.context}"/>
              </bean>
            </constructor-arg>
          </bean>
        </entry>

        <entry key="${jsonSubcontext}${noun.antPattern}/**">
          <bean parent="rest-endpoint" class="org.codehaus.enunciate.modules.rest.RESTResourceJSONExporter">
            <constructor-arg>
              <bean factory-bean="restResourceFactory" factory-method="getRESTResource">
                <constructor-arg value="${noun.name}"/>
                <constructor-arg value="${noun.context}"/>
              </bean>
            </constructor-arg>
          </bean>
        </entry>
  [/@forEachRESTNoun]
  [#if securityEnabled && securityConfig.enableFormBasedLogin]

        <entry key="${securityConfig.formBasedLoginConfig.loginPageURL}">
          <bean class="org.codehaus.enunciate.modules.spring_app.StaticModelViewController">
            <property name="view">
              <bean class="org.springframework.web.servlet.view.JstlView">
                <property name="url" value="/WEB-INF/jsp/login.jsp"/>
              </bean>
            </property>
            <property name="model">
              <map>
                <entry key="cssURL" value="${docsDir}default.css"/>
                <entry key="formLoginURL" value="${securityConfig.formBasedLoginConfig.url}"/>
              </map>
            </property>
          </bean>
        </entry>
  [/#if]
  [#if securityEnabled && securityConfig.enableOAuth]

        <entry key="${securityConfig.OAuthConfig.accessConfirmationURL}">
          <bean class="org.codehaus.enunciate.modules.spring_app.OAuthConfirmAccessController">
            <property name="view">
              <bean class="org.springframework.web.servlet.view.JstlView">
                <property name="url" value="/WEB-INF/jsp/confirm_access.jsp"/>
              </bean>
            </property>
            <property name="model">
              <map>
                <entry key="cssURL" value="${docsDir}default.css"/>
                <entry key="grantAccessURL" value="${securityConfig.OAuthConfig.grantAccessURL}"/>
              </map>
            </property>
          </bean>
        </entry>

        <entry key="${securityConfig.OAuthConfig.accessConfirmedURL}">
          <bean class="org.codehaus.enunciate.modules.spring_app.StaticModelViewController">
            <property name="view">
              <bean class="org.springframework.web.servlet.view.JstlView">
                <property name="url" value="/WEB-INF/jsp/access_confirmed.jsp"/>
              </bean>
            </property>
            <property name="model">
              <map>
                <entry key="cssURL" value="${docsDir}default.css"/>
              </map>
            </property>
          </bean>
        </entry>

        <entry key="${securityConfig.OAuthConfig.infoURL}">
          <bean class="org.codehaus.enunciate.modules.spring_app.StaticModelViewController">
            <property name="view">
              <bean class="org.springframework.web.servlet.view.JstlView">
                <property name="url" value="/WEB-INF/jsp/oauth_info.jsp"/>
              </bean>
            </property>
            <property name="model">
              <map>
                <entry key="cssURL" value="${docsDir}default.css"/>
                <entry key="request_token_url" value="${securityConfig.OAuthConfig.requestTokenURL}"/>
                <entry key="access_token_url" value="${securityConfig.OAuthConfig.accessTokenURL}"/>
                <entry key="confirm_access_url" value="${securityConfig.OAuthConfig.accessConfirmationURL}"/>
              </map>
            </property>
          </bean>
        </entry>
  [/#if]
      </map>
    </property>
  </bean>
</beans>
[/@file]