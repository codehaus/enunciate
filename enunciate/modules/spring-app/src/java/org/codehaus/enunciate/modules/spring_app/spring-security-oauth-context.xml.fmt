[#ftl]
[@file name="spring-security-oauth-context.xml"]
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

  <!--The filter that accepts request for unauthenticated request tokens from OAuth consumers.-->
  <bean id="oauthRequestTokenFilter" class="org.springframework.security.oauth.provider.UnauthenticatedRequestTokenProcessingFilter">
    <property name="consumerDetailsService" ref="localConsumerDetailsService"/>
    <property name="filterProcessesUrl" value="${securityConfig.OAuthConfig.requestTokenURL}"/>
    <property name="tokenServices" ref="localTokenServices"/>
  </bean>

  <!--
    The filter that changes an unauthenticated request token to an authenticated request token. Per the OAuth
    spec, this filter requires that the principal (read "user") is already authenticated.

    This filter processes two request parameters that specify the oauth token and the callback url.  By default,
    the names of these parameters are "oauth_token" and "oauth_callback", respectively.

    This filter requires three properties to be set: the URL that this filter will process, the token services,
    and the URL where the principal will be redirected in case that the token failed to be authorized (for example,
    the token is disabled or expired).
  -->
  <bean id="oauthUserAuthorizationFilter" class="org.springframework.security.oauth.provider.UserAuthorizationProcessingFilter">
    <property name="filterProcessesUrl" value="${securityConfig.OAuthConfig.grantAccessURL}"/>
    <property name="tokenServices" ref="localTokenServices"/>
    <property name="authenticationFailureUrl" value="${securityConfig.OAuthConfig.accessConfirmationURL}"/>

    <!--This is where the user will be redirected if the consumer didn't provide a callback URL.-->
    <property name="defaultTargetUrl" value="${securityConfig.OAuthConfig.accessConfirmedURL}"/>
  </bean>

  <!--The filter that accepts request for access tokens given authenticated request tokens from OAuth consumers.-->
  <bean id="oauthAccessTokenFilter" class="org.springframework.security.oauth.provider.AccessTokenProcessingFilter">
    <property name="consumerDetailsService" ref="localConsumerDetailsService"/>
    <property name="filterProcessesUrl" value="${securityConfig.OAuthConfig.accessTokenURL}"/>
    <property name="tokenServices" ref="localTokenServices"/>
  </bean>

  <!--The filter for protected resources.-->
  <bean id="oauthProtectedResourceFilter" class="org.springframework.security.oauth.provider.ProtectedResourceProcessingFilter">
    <property name="consumerDetailsService" ref="localConsumerDetailsService"/>
    <property name="tokenServices" ref="localTokenServices"/>
  </bean>

  [#if securityConfig.OAuthConfig.consumerDetailsService?exists]
    [#if securityConfig.OAuthConfig.consumerDetailsService.beanName?exists]
  <alias alias="localConsumerDetailsService" name="${securityConfig.OAuthConfig.consumerDetailsService.beanName}"/>
    [#elseif securityConfig.OAuthConfig.consumerDetailsService.className?exists]
  <bean id="localConsumerDetailsService" class="${securityConfig.OAuthConfig.consumerDetailsService.className}"/>
    [#else]
  <bean id="localConsumerDetailsService" class="org.codehaus.enunciate.modules.spring_app.DelegatingConsumerDetailsService"/>
    [/#if]
  [#else]
  <bean id="localConsumerDetailsService" class="org.codehaus.enunciate.modules.spring_app.DelegatingConsumerDetailsService"/>

  [/#if]
  [#if securityConfig.OAuthConfig.tokenServices?exists]
    [#if securityConfig.OAuthConfig.tokenServices.beanName?exists]
  <alias alias="localTokenServices" name="${securityConfig.OAuthConfig.tokenServices.beanName}"/>
    [#elseif securityConfig.OAuthConfig.tokenServices.className?exists]
  <bean id="localTokenServices" class="${securityConfig.OAuthConfig.tokenServices.className}"/>
    [#else]
  <bean id="localTokenServices" class="org.codehaus.enunciate.modules.spring_app.DelegatingTokenServices"/>
    [/#if]
  [#else]
  <bean id="localTokenServices" class="org.codehaus.enunciate.modules.spring_app.DelegatingTokenServices"/>

  [/#if]
</beans>
[/@file]