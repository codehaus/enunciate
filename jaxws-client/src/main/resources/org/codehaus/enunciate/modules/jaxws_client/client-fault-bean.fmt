[#ftl]
[#--template for the client-side endpoint interface.--]
[#assign beanfqn=fault.implicitFaultBeanQualifiedName/]
[#assign beanPackage=packageFor(beanfqn[0..(beanfqn?last_index_of(".") - 1)])/]
[#assign simpleBeanName=beanfqn[(beanfqn?last_index_of(".") + 1)..]/]
[@file name=(simpleBeanName + ".java")  package=beanPackage charset="utf-8"]
// Generated by Enunciate
package ${beanPackage};

import javax.xml.namespace.QName;

/**
 * Fault bean for the ${fault.elementName} fault.
 */
@javax.xml.bind.annotation.XmlRootElement (
  name = "${fault.elementName}",
  namespace = "${fault.targetNamespace}"
)
@javax.xml.bind.annotation.XmlType (
  name = "${fault.elementName}",
  namespace = "${fault.targetNamespace}",
  propOrder = {[#list fault.childElements as childElement] "${childElement.elementName}"[#if childElement_has_next],[/#if][/#list] }
)
@javax.xml.bind.annotation.XmlAccessorType ( javax.xml.bind.annotation.XmlAccessType.FIELD )
public class ${simpleBeanName} {

  [#list fault.childElements as childElement]
  @javax.xml.bind.annotation.XmlElement (
    name = "${childElement.elementName}"
  )
    [#if childElement.mimeType??]
  @javax.xml.bind.annotation.XmlMimeType("${childElement.mimeType}")
    [/#if]
    [#if childElement.swaRef]
  @javax.xml.bind.annotation.XmlAttachmentRef
    [/#if]
  protected ${classnameFor(childElement)} ${childElement.elementName};
  [/#list]
  [#list fault.childElements as childElement]

  /**
   * ${childElement.elementDocs?default("(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public ${classnameFor(childElement)} get${childElement.elementName?cap_first}() {
    return this.${childElement.elementName};
  }

  /**
   * ${childElement.elementDocs?default("(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public void set${childElement.elementName?cap_first}(${classnameFor(childElement)} ${childElement.elementName}) {
    this.${childElement.elementName} = ${childElement.elementName};
  }

  [/#list]
}
[/@file]